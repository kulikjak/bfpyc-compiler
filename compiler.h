#ifndef COMPILER_H
#define COMPILER_H

#include <stdint.h>

/* Size of the buffer used to read the input file. */
#define INPUT_BUFFER_SIZE 1024

/* Length of the program tape (number of cells) */
#define BF_ARRAY_SIZE 30000


/* This is all based on Python 3.9 virtual machine and bytecode. These things
 * are not stable in any way, meaning that code generated by this compiler
 * probably won't work on any other virtual machine. */
#define MAGIC_NUMBER  3425

/* Following TYPE_ defines are used by Python marshal to determine the type of
 * bytecode sections. Those are taken directly from
 * https://github.com/python/cpython/blob/3.9/Python/marshal.c */
#define TYPE_NONE               'N'
#define TYPE_INT                'i'
#define TYPE_STRING             's'
#define TYPE_CODE               'c'
#define TYPE_SMALL_TUPLE        ')'
#define TYPE_SHORT_ASCII        'z'
#define TYPE_SHORT_ASCII_INTERNED 'Z'

/* Convenience macro for unreachable parts of the code. */
#define _UNREACHABLE { \
  fprintf(stderr, "_UNREACHABLE reached on line %d (%s)\n", __LINE__, __FILE__); \
  abort(); \
}

typedef int8_t i8;
typedef int32_t i32;

typedef uint8_t u8;
typedef uint32_t u32;

#endif
